
{
    "AWSTemplateFormatVersion" : "2010-09-09",

    "Description" : "Template to set up Lambda function, DynamoDB table and related IAM roles for IOE2015 Sprint-Hack.",

    "Parameters" : {
        "LambdaS3Bucket" : {
            "Type" : "String",
            "Default" : "ioe2015",
            "Description" : "Name of S3 bucket where Lambda function package is stored."
        },
        "LambdaS3Key" : {
            "Type" : "String",
            "Default" : "iotapi.zip",
            "Description" : "Name of S3 key for Lambda function package."
        }
    },

    "Resources" : {
        "iotclient" : {
            "Type" : "AWS::IAM::User"
        },

        "IoTClientPolicy" : {
            "Type" : "AWS::IAM::Policy",
            "Properties" : {
                "PolicyName" : "IotClientPolicy",
                "PolicyDocument" : {
                    "Statement": [{
                        "Effect": "Allow",
                        "Action": [
                            "lambda:InvokeFunction"
                        ],
                        "Resource": {"Fn::GetAtt" : ["IoTAPI", "Arn"] }
                    }]
                },
                "Users" : [{ "Ref" : "iotclient" }]
            }
        },

        "ClientKeys" : {
            "Type" : "AWS::IAM::AccessKey",
            "Properties" : {
                "UserName" : { "Ref": "iotclient" }
            }
        },

        "IoTAPI": {
            "Type" : "AWS::Lambda::Function",
            "Properties" : {
                "Description" : "IoT API Function",
                "Handler" : "iotapi.handler",
                "MemorySize" : 128,
                "Role" : {"Fn::GetAtt" : ["IoTAPIExecutionRole", "Arn"] },
                "Timeout" : 10,
                "Runtime" : "nodejs",
                "Code" : {
                    "S3Bucket" : { "Ref": "LambdaS3Bucket" },
                    "S3Key" : { "Ref": "LambdaS3Key" }
                }
            }
        },

        "IoTAPIExecutionRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version" : "2012-10-17",
                    "Statement": [ {
                        "Effect": "Allow",
                        "Principal": {
                            "Service": [ "lambda.amazonaws.com" ]
                        },
                        "Action": [ "sts:AssumeRole" ]
                    } ]
                },
                "Path": "/",
                "Policies": [ {
                    "PolicyName": "IoTAPIExecutionPolicy",
                    "PolicyDocument": {
                        "Version" : "2012-10-17",
                        "Statement": [
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "logs:*"
                                ],
                                "Resource": "arn:aws:logs:*:*:*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "cloudwatch:PutMetricData"
                                ],
                                "Resource": "*"
                            },
                            {
                                "Effect": "Allow",
                                "Action": [
                                    "dynamodb:PutItem",
                                    "dynamodb:Query"
                                ],
                                "Resource": { "Fn::Join" : [ "", ["arn:aws:dynamodb:", {"Ref" : "AWS::Region"} , ":", {"Ref" : "AWS::AccountId"} ,":table/SensorData"]]}
                            }
                        ]
                    }
                } ]
            }
        },

        "SensorDataTable" : {
            "Type" : "AWS::DynamoDB::Table",
            "Properties" : {
                "AttributeDefinitions" : [
                    {
                        "AttributeName" : "SensorId",
                        "AttributeType" : "S"
                    },
                    {
                        "AttributeName" : "Timestamp",
                        "AttributeType" : "S"
                    }
                ],
                "KeySchema" : [
                    {
                        "AttributeName" : "SensorId",
                        "KeyType" : "HASH"
                    },
                    {
                        "AttributeName" : "Timestamp",
                        "KeyType" : "RANGE"
                    }
                ],
                "ProvisionedThroughput" : {
                    "ReadCapacityUnits" : "1",
                    "WriteCapacityUnits" : "1"
                },
                "TableName" : "SensorData"
            }
        }
    },

    "Outputs" : {
        "AccessKey" : {
            "Value" : { "Ref" : "ClientKeys" },
            "Description" : "AWS Access Key Id of IoT client user"
        },
        "SecretKey" : {
            "Value" : { "Fn::GetAtt" : ["ClientKeys", "SecretAccessKey"]},
            "Description" : "AWS Secret Key of IoT client user"
        },
        "LambdaFunction" : {
            "Value" : { "Ref" : "IoTAPI" },
            "Description" : "Name of Lambda Function that implements the IoT API"
        },
        "Region" : {
            "Value" : { "Ref" : "AWS::Region" },
            "Description" : "The region this template was created in."
        }
    }
}

